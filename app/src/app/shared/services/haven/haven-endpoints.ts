import {WebHookLogEndpoint} from './endpoints/Core/WebHookLogEndpoint';
import {TranslationEndpoint} from './endpoints/Core/TranslationEndpoint';
import {TopicTagEndpoint} from './endpoints/Core/TopicTagEndpoint';
import {TopicResponseEndpoint} from './endpoints/Core/TopicResponseEndpoint';
import {TopicEndpoint} from './endpoints/Core/TopicEndpoint';
import {TopicDesignationEndpoint} from './endpoints/Core/TopicDesignationEndpoint';
import {ThreadResponseEndpoint} from './endpoints/Core/ThreadResponseEndpoint';
import {ThreadEndpoint} from './endpoints/Core/ThreadEndpoint';
import {TermPackageEndpoint} from './endpoints/Core/TermPackageEndpoint';
import {TermMemberEndpoint} from './endpoints/Core/TermMemberEndpoint';
import {TermEndpoint} from './endpoints/Core/TermEndpoint';
import {TemplateEndpoint} from './endpoints/Core/TemplateEndpoint';
import {SubscriptionEndpoint} from './endpoints/Core/SubscriptionEndpoint';
import {StepMetaEndpoint} from './endpoints/Core/StepMetaEndpoint';
import {StepEndpoint} from './endpoints/Core/StepEndpoint';
import {ServerEndpoint} from './endpoints/Core/ServerEndpoint';
import {SeatTypeEndpoint} from './endpoints/Core/SeatTypeEndpoint';
import {SeatPackageItemEndpoint} from './endpoints/Core/SeatPackageItemEndpoint';
import {SeatPackageItemDataEndpoint} from './endpoints/Core/SeatPackageItemDataEndpoint';
import {SeatPackageEndpoint} from './endpoints/Core/SeatPackageEndpoint';
import {SeatMessageEndpoint} from './endpoints/Core/SeatMessageEndpoint';
import {SeatEndpoint} from './endpoints/Core/SeatEndpoint';
import {RemarkReplyEndpoint} from './endpoints/Core/RemarkReplyEndpoint';
import {RemarkEndpoint} from './endpoints/Core/RemarkEndpoint';
import {ReleaseEndpoint} from './endpoints/Core/ReleaseEndpoint';
import {ProspectEndpoint} from './endpoints/Core/ProspectEndpoint';
import {PromotionGrantEndpoint} from './endpoints/Core/PromotionGrantEndpoint';
import {PromotionEndpoint} from './endpoints/Core/PromotionEndpoint';
import {PromotionConsumptionEndpoint} from './endpoints/Core/PromotionConsumptionEndpoint';
import {ProjectSettingEndpoint} from './endpoints/Core/ProjectSettingEndpoint';
import {ProjectEndpoint} from './endpoints/Core/ProjectEndpoint';
import {ProgramResponseEndpoint} from './endpoints/Core/ProgramResponseEndpoint';
import {ProgramRemarkReplyEndpoint} from './endpoints/Core/ProgramRemarkReplyEndpoint';
import {ProgramRemarkEndpoint} from './endpoints/Core/ProgramRemarkEndpoint';
import {ProgramEndpoint} from './endpoints/Core/ProgramEndpoint';
import {ProgramDiscussionEndpoint} from './endpoints/Core/ProgramDiscussionEndpoint';
import {ProfileFieldEndpoint} from './endpoints/Core/ProfileFieldEndpoint';
import {ProfileFieldDataEndpoint} from './endpoints/Core/ProfileFieldDataEndpoint';
import {ProfileEndpoint} from './endpoints/Core/ProfileEndpoint';
import {ProductSeatTypeEndpoint} from './endpoints/Core/ProductSeatTypeEndpoint';
import {ProductEndpoint} from './endpoints/Core/ProductEndpoint';
import {ProcedureEndpoint} from './endpoints/Core/ProcedureEndpoint';
import {ProcedureCategoryEndpoint} from './endpoints/Core/ProcedureCategoryEndpoint';
import {PrincipalInviteEndpoint} from './endpoints/Core/PrincipalInviteEndpoint';
import {PrincipalFieldEndpoint} from './endpoints/Core/PrincipalFieldEndpoint';
import {PrincipalFieldDataEndpoint} from './endpoints/Core/PrincipalFieldDataEndpoint';
import {PrincipalEndpoint} from './endpoints/Core/PrincipalEndpoint';
import {PostEndpoint} from './endpoints/Core/PostEndpoint';
import {PlanSeatTypeEndpoint} from './endpoints/Core/PlanSeatTypeEndpoint';
import {PlanEndpoint} from './endpoints/Core/PlanEndpoint';
import {PinEndpoint} from './endpoints/Core/PinEndpoint';
import {PinCategoryEndpoint} from './endpoints/Core/PinCategoryEndpoint';
import {ParticipantEndpoint} from './endpoints/Core/ParticipantEndpoint';
import {PackageItemEndpoint} from './endpoints/Core/PackageItemEndpoint';
import {PackageEndpoint} from './endpoints/Core/PackageEndpoint';
import {OccasionResponseEndpoint} from './endpoints/Core/OccasionResponseEndpoint';
import {OccasionRemarkReplyEndpoint} from './endpoints/Core/OccasionRemarkReplyEndpoint';
import {OccasionRemarkEndpoint} from './endpoints/Core/OccasionRemarkEndpoint';
import {OccasionItemEndpoint} from './endpoints/Core/OccasionItemEndpoint';
import {OccasionEndpoint} from './endpoints/Core/OccasionEndpoint';
import {OccasionCategoryEndpoint} from './endpoints/Core/OccasionCategoryEndpoint';
import {NotificationEndpoint} from './endpoints/Core/NotificationEndpoint';
import {NamingEndpoint} from './endpoints/Core/NamingEndpoint';
import {MessageReceiptEndpoint} from './endpoints/Core/MessageReceiptEndpoint';
import {MessageEndpoint} from './endpoints/Core/MessageEndpoint';
import {MemberEndpoint} from './endpoints/Core/MemberEndpoint';
import {MediaEndpoint} from './endpoints/Core/MediaEndpoint';
import {ManagerEndpoint} from './endpoints/Core/ManagerEndpoint';
import {LoginHistoryEndpoint} from './endpoints/Core/LoginHistoryEndpoint';
import {LanguageTokenEndpoint} from './endpoints/Core/LanguageTokenEndpoint';
import {LanguageEndpoint} from './endpoints/Core/LanguageEndpoint';
import {InviteEndpoint} from './endpoints/Core/InviteEndpoint';
import {GroupTargetEndpoint} from './endpoints/Core/GroupTargetEndpoint';
import {GroupMemberEndpoint} from './endpoints/Core/GroupMemberEndpoint';
import {GroupEndpoint} from './endpoints/Core/GroupEndpoint';
import {GrantedTermEndpoint} from './endpoints/Core/GrantedTermEndpoint';
import {GlobalSettingEndpoint} from './endpoints/Core/GlobalSettingEndpoint';
import {FormResponseEndpoint} from './endpoints/Core/FormResponseEndpoint';
import {FormResponseDataEndpoint} from './endpoints/Core/FormResponseDataEndpoint';
import {FormQuestionEndpoint} from './endpoints/Core/FormQuestionEndpoint';
import {FormEndpoint} from './endpoints/Core/FormEndpoint';
import {FormConfigQuestionEndpoint} from './endpoints/Core/FormConfigQuestionEndpoint';
import {FormConfigEndpoint} from './endpoints/Core/FormConfigEndpoint';
import {FeedItemEndpoint} from './endpoints/Core/FeedItemEndpoint';
import {FeedBackEndpoint} from './endpoints/Core/FeedBackEndpoint';
import {FactionTrackingEndpoint} from './endpoints/Core/FactionTrackingEndpoint';
import {FactionTemplateEndpoint} from './endpoints/Core/FactionTemplateEndpoint';
import {FactionSettingEndpoint} from './endpoints/Core/FactionSettingEndpoint';
import {FactionFileEndpoint} from './endpoints/Core/FactionFileEndpoint';
import {FactionEndpoint} from './endpoints/Core/FactionEndpoint';
import {FactionAssetEndpoint} from './endpoints/Core/FactionAssetEndpoint';
import {FactionAccountEndpoint} from './endpoints/Core/FactionAccountEndpoint';
import {EntryResponseEndpoint} from './endpoints/Core/EntryResponseEndpoint';
import {EntryReplyEndpoint} from './endpoints/Core/EntryReplyEndpoint';
import {EntryFileEndpoint} from './endpoints/Core/EntryFileEndpoint';
import {EntryEndpoint} from './endpoints/Core/EntryEndpoint';
import {EmailEndpoint} from './endpoints/Core/EmailEndpoint';
import {DocumentSignerEndpoint} from './endpoints/Core/DocumentSignerEndpoint';
import {DocumentsEndpoint} from './endpoints/Core/DocumentsEndpoint';
import {DocumentHistoryEndpoint} from './endpoints/Core/DocumentHistoryEndpoint';
import {DocumentCacheEndpoint} from './endpoints/Core/DocumentCacheEndpoint';
import {DivisionEndpoint} from './endpoints/Core/DivisionEndpoint';
import {ConversationResponseEndpoint} from './endpoints/Core/ConversationResponseEndpoint';
import {ConversationReceiptEndpoint} from './endpoints/Core/ConversationReceiptEndpoint';
import {ConversationEndpoint} from './endpoints/Core/ConversationEndpoint';
import {ContactEndpoint} from './endpoints/Core/ContactEndpoint';
import {CommentReplyEndpoint} from './endpoints/Core/CommentReplyEndpoint';
import {CommentEndpoint} from './endpoints/Core/CommentEndpoint';
import {BulletinResponseEndpoint} from './endpoints/Core/BulletinResponseEndpoint';
import {BulletinEndpoint} from './endpoints/Core/BulletinEndpoint';
import {BulletinCategoryEndpoint} from './endpoints/Core/BulletinCategoryEndpoint';
import {AuthEndpoint} from './endpoints/Core/AuthEndpoint';
import {AssignmentResponseEndpoint} from './endpoints/Core/AssignmentResponseEndpoint';
import {AssignmentResponseDataEndpoint} from './endpoints/Core/AssignmentResponseDataEndpoint';
import {AssignmentMetaEndpoint} from './endpoints/Core/AssignmentMetaEndpoint';
import {AssignmentEndpoint} from './endpoints/Core/AssignmentEndpoint';
import {AppServerEndpoint} from './endpoints/Core/AppServerEndpoint';
import {AppLabelSettingEndpoint} from './endpoints/Core/AppLabelSettingEndpoint';
import {AppLabelEndpoint} from './endpoints/Core/AppLabelEndpoint';
import {AnnouncementEndpoint} from './endpoints/Core/AnnouncementEndpoint';
import {AlertEndpoint} from './endpoints/Core/AlertEndpoint';
import {AccountSettingEndpoint} from './endpoints/Core/AccountSettingEndpoint';
import {AccountEndpoint} from './endpoints/Core/AccountEndpoint';
import {AccountAssetEndpoint} from './endpoints/Core/AccountAssetEndpoint';
import {HavenRequest} from './haven-request';
import {IHavenSDK} from './haven-sdk-interface';
import { Md5 } from 'ts-md5/dist/md5';
export class HavenEndpoints {
    WebHookLog: WebHookLogEndpoint;
    Translation: TranslationEndpoint;
    TopicTag: TopicTagEndpoint;
    TopicResponse: TopicResponseEndpoint;
    Topic: TopicEndpoint;
    TopicDesignation: TopicDesignationEndpoint;
    ThreadResponse: ThreadResponseEndpoint;
    Thread: ThreadEndpoint;
    TermPackage: TermPackageEndpoint;
    TermMember: TermMemberEndpoint;
    Term: TermEndpoint;
    Template: TemplateEndpoint;
    Subscription: SubscriptionEndpoint;
    StepMeta: StepMetaEndpoint;
    Step: StepEndpoint;
    Server: ServerEndpoint;
    SeatType: SeatTypeEndpoint;
    SeatPackageItem: SeatPackageItemEndpoint;
    SeatPackageItemData: SeatPackageItemDataEndpoint;
    SeatPackage: SeatPackageEndpoint;
    SeatMessage: SeatMessageEndpoint;
    Seat: SeatEndpoint;
    RemarkReply: RemarkReplyEndpoint;
    Remark: RemarkEndpoint;
    Release: ReleaseEndpoint;
    Prospect: ProspectEndpoint;
    PromotionGrant: PromotionGrantEndpoint;
    Promotion: PromotionEndpoint;
    PromotionConsumption: PromotionConsumptionEndpoint;
    ProjectSetting: ProjectSettingEndpoint;
    Project: ProjectEndpoint;
    ProgramResponse: ProgramResponseEndpoint;
    ProgramRemarkReply: ProgramRemarkReplyEndpoint;
    ProgramRemark: ProgramRemarkEndpoint;
    Program: ProgramEndpoint;
    ProgramDiscussion: ProgramDiscussionEndpoint;
    ProfileField: ProfileFieldEndpoint;
    ProfileFieldData: ProfileFieldDataEndpoint;
    Profile: ProfileEndpoint;
    ProductSeatType: ProductSeatTypeEndpoint;
    Product: ProductEndpoint;
    Procedure: ProcedureEndpoint;
    ProcedureCategory: ProcedureCategoryEndpoint;
    PrincipalInvite: PrincipalInviteEndpoint;
    PrincipalField: PrincipalFieldEndpoint;
    PrincipalFieldData: PrincipalFieldDataEndpoint;
    Principal: PrincipalEndpoint;
    Post: PostEndpoint;
    PlanSeatType: PlanSeatTypeEndpoint;
    Plan: PlanEndpoint;
    Pin: PinEndpoint;
    PinCategory: PinCategoryEndpoint;
    Participant: ParticipantEndpoint;
    PackageItem: PackageItemEndpoint;
    Package: PackageEndpoint;
    OccasionResponse: OccasionResponseEndpoint;
    OccasionRemarkReply: OccasionRemarkReplyEndpoint;
    OccasionRemark: OccasionRemarkEndpoint;
    OccasionItem: OccasionItemEndpoint;
    Occasion: OccasionEndpoint;
    OccasionCategory: OccasionCategoryEndpoint;
    Notification: NotificationEndpoint;
    Naming: NamingEndpoint;
    MessageReceipt: MessageReceiptEndpoint;
    Message: MessageEndpoint;
    Member: MemberEndpoint;
    Media: MediaEndpoint;
    Manager: ManagerEndpoint;
    LoginHistory: LoginHistoryEndpoint;
    LanguageToken: LanguageTokenEndpoint;
    Language: LanguageEndpoint;
    Invite: InviteEndpoint;
    GroupTarget: GroupTargetEndpoint;
    GroupMember: GroupMemberEndpoint;
    Group: GroupEndpoint;
    GrantedTerm: GrantedTermEndpoint;
    GlobalSetting: GlobalSettingEndpoint;
    FormResponse: FormResponseEndpoint;
    FormResponseData: FormResponseDataEndpoint;
    FormQuestion: FormQuestionEndpoint;
    Form: FormEndpoint;
    FormConfigQuestion: FormConfigQuestionEndpoint;
    FormConfig: FormConfigEndpoint;
    FeedItem: FeedItemEndpoint;
    FeedBack: FeedBackEndpoint;
    FactionTracking: FactionTrackingEndpoint;
    FactionTemplate: FactionTemplateEndpoint;
    FactionSetting: FactionSettingEndpoint;
    FactionFile: FactionFileEndpoint;
    Faction: FactionEndpoint;
    FactionAsset: FactionAssetEndpoint;
    FactionAccount: FactionAccountEndpoint;
    EntryResponse: EntryResponseEndpoint;
    EntryReply: EntryReplyEndpoint;
    EntryFile: EntryFileEndpoint;
    Entry: EntryEndpoint;
    Email: EmailEndpoint;
    DocumentSigner: DocumentSignerEndpoint;
    Documents: DocumentsEndpoint;
    DocumentHistory: DocumentHistoryEndpoint;
    DocumentCache: DocumentCacheEndpoint;
    Division: DivisionEndpoint;
    ConversationResponse: ConversationResponseEndpoint;
    ConversationReceipt: ConversationReceiptEndpoint;
    Conversation: ConversationEndpoint;
    Contact: ContactEndpoint;
    CommentReply: CommentReplyEndpoint;
    Comment: CommentEndpoint;
    BulletinResponse: BulletinResponseEndpoint;
    Bulletin: BulletinEndpoint;
    BulletinCategory: BulletinCategoryEndpoint;
    Auth: AuthEndpoint;
    AssignmentResponse: AssignmentResponseEndpoint;
    AssignmentResponseData: AssignmentResponseDataEndpoint;
    AssignmentMeta: AssignmentMetaEndpoint;
    Assignment: AssignmentEndpoint;
    AppServer: AppServerEndpoint;
    AppLabelSetting: AppLabelSettingEndpoint;
    AppLabel: AppLabelEndpoint;
    Announcement: AnnouncementEndpoint;
    Alert: AlertEndpoint;
    AccountSetting: AccountSettingEndpoint;
    Account: AccountEndpoint;
    AccountAsset: AccountAssetEndpoint;
    
    constructEndpoints(api){
        
        this.WebHookLog = new WebHookLogEndpoint(api);
        this.Translation = new TranslationEndpoint(api);
        this.TopicTag = new TopicTagEndpoint(api);
        this.TopicResponse = new TopicResponseEndpoint(api);
        this.Topic = new TopicEndpoint(api);
        this.TopicDesignation = new TopicDesignationEndpoint(api);
        this.ThreadResponse = new ThreadResponseEndpoint(api);
        this.Thread = new ThreadEndpoint(api);
        this.TermPackage = new TermPackageEndpoint(api);
        this.TermMember = new TermMemberEndpoint(api);
        this.Term = new TermEndpoint(api);
        this.Template = new TemplateEndpoint(api);
        this.Subscription = new SubscriptionEndpoint(api);
        this.StepMeta = new StepMetaEndpoint(api);
        this.Step = new StepEndpoint(api);
        this.Server = new ServerEndpoint(api);
        this.SeatType = new SeatTypeEndpoint(api);
        this.SeatPackageItem = new SeatPackageItemEndpoint(api);
        this.SeatPackageItemData = new SeatPackageItemDataEndpoint(api);
        this.SeatPackage = new SeatPackageEndpoint(api);
        this.SeatMessage = new SeatMessageEndpoint(api);
        this.Seat = new SeatEndpoint(api);
        this.RemarkReply = new RemarkReplyEndpoint(api);
        this.Remark = new RemarkEndpoint(api);
        this.Release = new ReleaseEndpoint(api);
        this.Prospect = new ProspectEndpoint(api);
        this.PromotionGrant = new PromotionGrantEndpoint(api);
        this.Promotion = new PromotionEndpoint(api);
        this.PromotionConsumption = new PromotionConsumptionEndpoint(api);
        this.ProjectSetting = new ProjectSettingEndpoint(api);
        this.Project = new ProjectEndpoint(api);
        this.ProgramResponse = new ProgramResponseEndpoint(api);
        this.ProgramRemarkReply = new ProgramRemarkReplyEndpoint(api);
        this.ProgramRemark = new ProgramRemarkEndpoint(api);
        this.Program = new ProgramEndpoint(api);
        this.ProgramDiscussion = new ProgramDiscussionEndpoint(api);
        this.ProfileField = new ProfileFieldEndpoint(api);
        this.ProfileFieldData = new ProfileFieldDataEndpoint(api);
        this.Profile = new ProfileEndpoint(api);
        this.ProductSeatType = new ProductSeatTypeEndpoint(api);
        this.Product = new ProductEndpoint(api);
        this.Procedure = new ProcedureEndpoint(api);
        this.ProcedureCategory = new ProcedureCategoryEndpoint(api);
        this.PrincipalInvite = new PrincipalInviteEndpoint(api);
        this.PrincipalField = new PrincipalFieldEndpoint(api);
        this.PrincipalFieldData = new PrincipalFieldDataEndpoint(api);
        this.Principal = new PrincipalEndpoint(api);
        this.Post = new PostEndpoint(api);
        this.PlanSeatType = new PlanSeatTypeEndpoint(api);
        this.Plan = new PlanEndpoint(api);
        this.Pin = new PinEndpoint(api);
        this.PinCategory = new PinCategoryEndpoint(api);
        this.Participant = new ParticipantEndpoint(api);
        this.PackageItem = new PackageItemEndpoint(api);
        this.Package = new PackageEndpoint(api);
        this.OccasionResponse = new OccasionResponseEndpoint(api);
        this.OccasionRemarkReply = new OccasionRemarkReplyEndpoint(api);
        this.OccasionRemark = new OccasionRemarkEndpoint(api);
        this.OccasionItem = new OccasionItemEndpoint(api);
        this.Occasion = new OccasionEndpoint(api);
        this.OccasionCategory = new OccasionCategoryEndpoint(api);
        this.Notification = new NotificationEndpoint(api);
        this.Naming = new NamingEndpoint(api);
        this.MessageReceipt = new MessageReceiptEndpoint(api);
        this.Message = new MessageEndpoint(api);
        this.Member = new MemberEndpoint(api);
        this.Media = new MediaEndpoint(api);
        this.Manager = new ManagerEndpoint(api);
        this.LoginHistory = new LoginHistoryEndpoint(api);
        this.LanguageToken = new LanguageTokenEndpoint(api);
        this.Language = new LanguageEndpoint(api);
        this.Invite = new InviteEndpoint(api);
        this.GroupTarget = new GroupTargetEndpoint(api);
        this.GroupMember = new GroupMemberEndpoint(api);
        this.Group = new GroupEndpoint(api);
        this.GrantedTerm = new GrantedTermEndpoint(api);
        this.GlobalSetting = new GlobalSettingEndpoint(api);
        this.FormResponse = new FormResponseEndpoint(api);
        this.FormResponseData = new FormResponseDataEndpoint(api);
        this.FormQuestion = new FormQuestionEndpoint(api);
        this.Form = new FormEndpoint(api);
        this.FormConfigQuestion = new FormConfigQuestionEndpoint(api);
        this.FormConfig = new FormConfigEndpoint(api);
        this.FeedItem = new FeedItemEndpoint(api);
        this.FeedBack = new FeedBackEndpoint(api);
        this.FactionTracking = new FactionTrackingEndpoint(api);
        this.FactionTemplate = new FactionTemplateEndpoint(api);
        this.FactionSetting = new FactionSettingEndpoint(api);
        this.FactionFile = new FactionFileEndpoint(api);
        this.Faction = new FactionEndpoint(api);
        this.FactionAsset = new FactionAssetEndpoint(api);
        this.FactionAccount = new FactionAccountEndpoint(api);
        this.EntryResponse = new EntryResponseEndpoint(api);
        this.EntryReply = new EntryReplyEndpoint(api);
        this.EntryFile = new EntryFileEndpoint(api);
        this.Entry = new EntryEndpoint(api);
        this.Email = new EmailEndpoint(api);
        this.DocumentSigner = new DocumentSignerEndpoint(api);
        this.Documents = new DocumentsEndpoint(api);
        this.DocumentHistory = new DocumentHistoryEndpoint(api);
        this.DocumentCache = new DocumentCacheEndpoint(api);
        this.Division = new DivisionEndpoint(api);
        this.ConversationResponse = new ConversationResponseEndpoint(api);
        this.ConversationReceipt = new ConversationReceiptEndpoint(api);
        this.Conversation = new ConversationEndpoint(api);
        this.Contact = new ContactEndpoint(api);
        this.CommentReply = new CommentReplyEndpoint(api);
        this.Comment = new CommentEndpoint(api);
        this.BulletinResponse = new BulletinResponseEndpoint(api);
        this.Bulletin = new BulletinEndpoint(api);
        this.BulletinCategory = new BulletinCategoryEndpoint(api);
        this.Auth = new AuthEndpoint(api);
        this.AssignmentResponse = new AssignmentResponseEndpoint(api);
        this.AssignmentResponseData = new AssignmentResponseDataEndpoint(api);
        this.AssignmentMeta = new AssignmentMetaEndpoint(api);
        this.Assignment = new AssignmentEndpoint(api);
        this.AppServer = new AppServerEndpoint(api);
        this.AppLabelSetting = new AppLabelSettingEndpoint(api);
        this.AppLabel = new AppLabelEndpoint(api);
        this.Announcement = new AnnouncementEndpoint(api);
        this.Alert = new AlertEndpoint(api);
        this.AccountSetting = new AccountSettingEndpoint(api);
        this.Account = new AccountEndpoint(api);
        this.AccountAsset = new AccountAssetEndpoint(api);
    }
    execute(request: HavenRequest) {
        throw new Error("You must override execute with a framework specific implementation");
    }
    injectAuthTokens(headers: any, api_key: string, api_secret: string):any {
        if (api_key && api_secret) {
            headers["x-api-key"] = api_key;
            headers["x-api-signature"] = Md5.hashStr(api_key + api_secret + (Date.now() / 1000 | 0));
        }
        return headers;
    }
}
